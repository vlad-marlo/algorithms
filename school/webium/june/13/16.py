# Два игрока, Петя и Ваня, играют в следующую игру. Перед игроками лежит куча камней. Игроки ходят по очереди, первый ход делает Петя.
# За один ход игрок может добавить в кучу один или четыре камня либо увеличить количество камней в куче в три раза.
# Игра завершается в тот момент, когда количество камней в куче становится не менее 55.
# Победителем считается игрок, сделавший последний ход, т.е. первым получивший кучу из 55 камней или больше.
# В начальный момент в куче было S камней; 1 ≤ S ≤ 54.
# Укажите минимальное значение S, при котором Петя не может выиграть за один ход, но при любом ходе Пети Ваня может выиграть своим первым ходом.
from functools import lru_cache


def steps(p: int) -> tuple[int, ...]:
    return p + 1, p + 4, p * 3


@lru_cache(None)
def game(p: int) -> int:
    if p >= 55:
        return 0
    if any(game(p1) == 0 for p1 in steps(p)):
        return 1
    if all(game(p1) == 1 for p1 in steps(p)):
        return 2
    if any(game(p1) == 2 for p1 in steps(p)):
        return 3
    if all(game(p1) in (1, 3) for p1 in steps(p)):
        return 4
    return -1


for s in range(1, 55):
    res = game(s)
    if res == 2:
        print(19, s)
    if res == 3:
        print(20, s)
    if res == 4:
        print(21, s)